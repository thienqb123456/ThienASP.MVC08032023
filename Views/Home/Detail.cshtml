@using ThienASPMVC08032023.ViewModel;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@model Clip
@{

}
<partial name="_StatusMessage"></partial>

<h1 class="text-primary"> Clip : @Model.Name </h1>

<div class="mt-4">
    <div class="row">
        <div class="col">
            <div >
                <iframe class="col-sm-12 col-lg-12 " width="1280" height="720" src="https://www.youtube.com/embed/@Model.Url"
                        title="YouTube video player" frameborder="0" allow="accelerometer;
                            autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;
                            web-share" allowfullscreen>
                </iframe>
            </div>
            <div class="d-flex ">
                <p class="col text-info card-text">TimeCreated : @Model.TimeCreated</p>
                <div >
                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (await UserManager.GetUserAsync(User) == Model.AuthorUser)
                        {
                            <a class="btn btn-danger" asp-controller="Home" asp-action="Delete" asp-route-Id="@Model.Id"> Delete</a>
                            <a class="btn btn-success" asp-controller="Home" asp-action="Edit" asp-route-Id="@Model.Id"> Edit</a>
                        }
                    }
                </div>

            </div>

            <div class="card-body">
                <h5 class="card-title text-warning">@Model.Name</h5>
                <p class="card-text">Author: <a class="text-decoration-none fw-bold mb-1" href="~/@Model.AuthorUser/"> @Model.AuthorUser </a> </p>

                <p class="card-text "> Description : <strong class="text-warning">@Model.Description</strong>  </p>
            </div>
        </div>

        <div id="comment-section">
            @if (Model.MainComments!.Any() == false )
            {
                <h5>There's no comment here </h5>

            } else
            {
                @foreach (var comment in Model.MainComments!)
                {
                    <div class="card">
                        <div class="card-body">
                            <a class="text-decoration-none fw-bold mb-1" href="~/@comment.User!.UserName"> @comment.User!.UserName </a>
                            <p class="text-muted small mb-0"> Shared publicly - @comment.TimeCreated</p>
                            <p class="mt-3 mb-4 pb-2"> @comment.CommentMsg</p>
                            <div class="small d-flex justify-content-start">

                                @if (SignInManager.IsSignedIn(User))
                                {
                                    @if (await UserManager.GetUserAsync(User) == comment.User)
                                    {
                                        <a asp-controller="Comment" asp-action="Edit" asp-route-id="@comment.Id" class="d-flex align-items-center me-3">
                                            <i class="far fa-comment-dots me-2"></i>
                                            <p class="mb-0">Edit</p>
                                        </a>
                                        <a asp-controller="Comment" asp-action="Delete" asp-route-id="@comment.Id" class="d-flex align-items-center me-3">
                                            <i class="far fa-comment-dots me-2"></i>
                                            <p class="mb-0">Delete</p>
                                        </a>
                                        

                                    }
                                }

                            </div>
                        </div>
                    </div>

                }
            }

            @if (SignInManager.IsSignedIn(User))
            {
                await Html.RenderPartialAsync("_MainCommentPartial", new CommentViewModel
                            {
                                ClipId = Model.Id,
                                MainCommentId = 0
                            });
               
            } else
              {
                <div>
                    <h5>You must be logged in to comment…</h5>
                    <p class="nav-item ">
                        <a class="btn btn-primary " asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Page("", new { area = "" })">Login</a>
                    </p>

                    <p class="nav-item">
                        <a class="btn btn-outline-primary" asp-area="Identity" asp-page="/Account/Register">Register</a>
                    </p>
                 </div>
              }

        </div>


    </div>


</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}